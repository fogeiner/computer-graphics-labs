Weil, версия 1.0
Валентин Свиридов, ФИТ, группа 8201.
Программа рисования и построения пересечения многоугольников
на основе алгоритма Вейлера-Азертона.

Тулбар:
	New - создать новый документ
	Load - загрузить документ из файла
	Save as... - сохранить файл под определенным именем

	Subject (красный прямоугольник) - начать рисование внешней границы области
	Hole (два красных прямоугольника) - начать рисовать "дырку" для области
	Clip (синий прямоугольник) - начать рисовать область отсечения
	Intersect - пересечь область (возможно, с дыркой) областью отсечения 
		и показать результат

	Settings - показать диалог настроек

	About - запустить текстовый редактор с этим документом

	Exit - завершить приложение

Замыкание полигона происходит по правой кнопке мыши.
Нельзя завершить рисование, если точек меньше 3 
или задана неправильная ориентация.
Ребро, которое при клике будет добавлено окончательно, рисуется сплошной
 "резиновой" линией, а второе -- пунктирной.
Линии следуют за мышью в том числе, когда последняя
находится вне фрейма.

Повторное нажатие на кнопку рисования полигона уже при наличии
этого полигона в моеди убирает нарисованный и дает создать новый.

Наличие самопересечений проверяется по ходу построения.

По нажатию на Escape можно убрать последнюю нарисованую точку текущего 
полигона. Если точек больше нет -- отменяется рисование полигона.

Создание вершин в одной точке или вблизи от пересечения
остается на совести пользователя, корректность работы в таких
случаях не предполагается.

Рисовать полигоны можно в произвольном порядке. Проверка на нахождение
дырки в области происходит при нажатии на "получить пересечения".

Канвас находится внутри JScrollPane, максимальный размер области установлен
как 3000x3000 точек (при бОльших параметрах при запуске приложения
со стандартными параметрами может не хватить памяти).
Начальный размер области (и получаемый при нажатии на New)
600x400 точек. Если даже рабочая область не умещает в себя модель, то
модель не теряется и при увеличении поля будет нарисована полностью.

При загрузке из файла:
проверяется, что размеры области неотрицательные, однако
проверка на значение сверху убрана для поддержки файлов
от других программ.
проверяется, что область описывается 1 или 2 контурами.
проверяется, что количество точек в контуре > 2.
проверяется наличие самопересечений и правильности ориентации полигонов.
При ошибке во время попытки распарсить данные -- соответствующее сообщение. 
Предполагается, что даваться на вход будут корректные файлы.

Для удобства при сохранении размер области записывается как размер 
"прямоугольника", содержащий все полигоны из модели + 50 пикселей по x и y.

Пока модель не будет завершена (есть subject и clip) неактивны 
кнопки получения пересечения и сохранения.
При попытке закрыть программу во время процесса рисования
выдается соответствующее сообщение.
При попытке закрыть программу с "измененной", но не полной моделью
выдается соответствующее сообщение.

В диалоге настроек можно изменить толщину ребер (от 1 до 21), цвет полигонов, цвет фона рабочей области, размер рабочей области. 
Никакие два цвета не могут быть одинаковыми. Используются синхронизованные JSpinner'ы и JSlider'ы.

Используется двойная буферизация и сглаживание.

Для нахождения точки пересечения отрезков используется
параметрическое представление отрезков.
Для определения ориентации используется "площадь со знаком".
Для определения, находится ли точка внутри полигона используется
алгоритм odd-even ("бесконечная" точка находится в координате
(10e6, 10e6)).
Нулем в считается число, меньшее EPS=1e-12.

В модели числа храняется в double и лишь в момент отрисовки
приводится к int с правильным округлением.

Суть работы:
Строятся/загружаются полигоны.

Если есть subject и clip, то разрешается получить пересечение
(наличие hole необязательно).

Если hole имеется, то проверяется, что он лежит в subject; иначе
просьба перестроить/убрать.

Проверяются случаи, когда нет пересечений между полигонами.
subject, hole внутри clip, clip внутри hole, clip внутри hole и т.д.
Если модель представляет случай, когда пересечение пусто,
то на экране это так и отображается: нет области пересечения.

Находятся точки пересечения полигонов и добавляются в 
списки вершин обоих полигонов (с ссылками друг на друга).

Находятся точки пересечения, в которых область (subject и hole) входят в clip. 

Пока список входных вершин не пуст,
	создается новый полигон

	из списка берется вершина v, добавляется в полигон, удаляется из списка
	берется следующая за ней v2 в subject/hole и добавляется в полигон
	
	пока не вернёмся в v
	если v2 -- точка пересечения
		v2 <-	следующая за v2 из "другого" списка
	иначе
		v2 <- следующая за v2
	
	удалить v2 из списка входных точек (если имеется)
	добавить v2 в список точек полигона
	
Таким образом на выходе может быть несколько областей.
